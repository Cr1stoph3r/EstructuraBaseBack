// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @unique @default(autoincrement())
  email        String         @unique
  user         String         @unique
  dni          String         @unique
  name         String?
  lastName     String?
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?
  userProfiles UserProfiles[]
}

model Profile {
  id           Int            @id @unique @default(autoincrement())
  profile      String
  description  String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?
  userProfiles UserProfiles[]
}

model UserProfiles {
  id        Int       @id @unique @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  profile   Profile   @relation(fields: [profileId], references: [id])
  userId    Int
  profileId Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([userId])
}

model Menu {
  id         Int       @id @unique @default(autoincrement())
  title      String
  icon       String?
  order      Int?
  target     String? // Target será null cuando sea una categoría
  isCategory Boolean   @default(false) // Define si es categoría
  idCategory Int? // Referencia a la categoría padre
  level      Int? // Nivel de la categoría (0 = nivel superior)
  parent     Menu?     @relation("MenuToMenu", fields: [idCategory], references: [id])
  children   Menu[]    @relation("MenuToMenu")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
}
